### YamlMime:ManagedReference
items:
- uid: LiteEntitySystem.SyncableField
  commentId: T:LiteEntitySystem.SyncableField
  id: SyncableField
  parent: LiteEntitySystem
  children:
  - LiteEntitySystem.SyncableField.ExecuteRPC(LiteEntitySystem.RemoteCall@)
  - LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  - LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  - LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  - LiteEntitySystem.SyncableField.IsClient
  - LiteEntitySystem.SyncableField.IsServer
  - LiteEntitySystem.SyncableField.ParentEntity
  - LiteEntitySystem.SyncableField.ParentEntityLogic
  - LiteEntitySystem.SyncableField.RegisterRPC(LiteEntitySystem.SyncableRPCRegistrator@)
  langs:
  - csharp
  - vb
  name: SyncableField
  nameWithType: SyncableField
  fullName: LiteEntitySystem.SyncableField
  type: Class
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Base class for fields with custom serialization (strings,lists,etc)
  example: []
  syntax:
    content: 'public abstract class SyncableField : InternalBaseClass'
    content.vb: Public MustInherit Class SyncableField Inherits InternalBaseClass
  inheritance:
  - System.Object
  - LiteEntitySystem.Internal.InternalBaseClass
  derivedClasses:
  - LiteEntitySystem.Extensions.SyncArray`1
  - LiteEntitySystem.Extensions.SyncFixedArray`1
  - LiteEntitySystem.Extensions.SyncNetSerializable`1
  - LiteEntitySystem.Extensions.SyncSpanSerializable`1
  - LiteEntitySystem.Extensions.SyncSquare`1
  - LiteEntitySystem.Extensions.SyncStateMachine`1
  - LiteEntitySystem.Extensions.SyncString
  - LiteEntitySystem.Extensions.SyncTimer
  - LiteEntitySystem.SyncableFieldCustomRollback
  inheritedMembers:
  - LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
- uid: LiteEntitySystem.SyncableField.IsClient
  commentId: P:LiteEntitySystem.SyncableField.IsClient
  id: IsClient
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: IsClient
  nameWithType: SyncableField.IsClient
  fullName: LiteEntitySystem.SyncableField.IsClient
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Is syncableField on client
  example: []
  syntax:
    content: protected bool IsClient { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property IsClient As Boolean
  overload: LiteEntitySystem.SyncableField.IsClient*
- uid: LiteEntitySystem.SyncableField.IsServer
  commentId: P:LiteEntitySystem.SyncableField.IsServer
  id: IsServer
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: IsServer
  nameWithType: SyncableField.IsServer
  fullName: LiteEntitySystem.SyncableField.IsServer
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Is syncableField on server
  example: []
  syntax:
    content: protected bool IsServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property IsServer As Boolean
  overload: LiteEntitySystem.SyncableField.IsServer*
- uid: LiteEntitySystem.SyncableField.ParentEntity
  commentId: P:LiteEntitySystem.SyncableField.ParentEntity
  id: ParentEntity
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: ParentEntity
  nameWithType: SyncableField.ParentEntity
  fullName: LiteEntitySystem.SyncableField.ParentEntity
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Owner of this syncable field
  example: []
  syntax:
    content: protected InternalEntity ParentEntity { get; }
    parameters: []
    return:
      type: LiteEntitySystem.Internal.InternalEntity
    content.vb: Protected ReadOnly Property ParentEntity As InternalEntity
  overload: LiteEntitySystem.SyncableField.ParentEntity*
- uid: LiteEntitySystem.SyncableField.ParentEntityLogic
  commentId: P:LiteEntitySystem.SyncableField.ParentEntityLogic
  id: ParentEntityLogic
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: ParentEntityLogic
  nameWithType: SyncableField.ParentEntityLogic
  fullName: LiteEntitySystem.SyncableField.ParentEntityLogic
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Owner of this syncable field casted to EntityLogic
  example: []
  syntax:
    content: protected EntityLogic ParentEntityLogic { get; }
    parameters: []
    return:
      type: LiteEntitySystem.EntityLogic
    content.vb: Protected ReadOnly Property ParentEntityLogic As EntityLogic
  overload: LiteEntitySystem.SyncableField.ParentEntityLogic*
- uid: LiteEntitySystem.SyncableField.RegisterRPC(LiteEntitySystem.SyncableRPCRegistrator@)
  commentId: M:LiteEntitySystem.SyncableField.RegisterRPC(LiteEntitySystem.SyncableRPCRegistrator@)
  id: RegisterRPC(LiteEntitySystem.SyncableRPCRegistrator@)
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: RegisterRPC(ref SyncableRPCRegistrator)
  nameWithType: SyncableField.RegisterRPC(ref SyncableRPCRegistrator)
  fullName: LiteEntitySystem.SyncableField.RegisterRPC(ref LiteEntitySystem.SyncableRPCRegistrator)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: protected virtual void RegisterRPC(ref SyncableRPCRegistrator r)
    parameters:
    - id: r
      type: LiteEntitySystem.SyncableRPCRegistrator
    content.vb: Protected Overridable Sub RegisterRPC(r As SyncableRPCRegistrator)
  overload: LiteEntitySystem.SyncableField.RegisterRPC*
  nameWithType.vb: SyncableField.RegisterRPC(SyncableRPCRegistrator)
  fullName.vb: LiteEntitySystem.SyncableField.RegisterRPC(LiteEntitySystem.SyncableRPCRegistrator)
  name.vb: RegisterRPC(SyncableRPCRegistrator)
- uid: LiteEntitySystem.SyncableField.ExecuteRPC(LiteEntitySystem.RemoteCall@)
  commentId: M:LiteEntitySystem.SyncableField.ExecuteRPC(LiteEntitySystem.RemoteCall@)
  id: ExecuteRPC(LiteEntitySystem.RemoteCall@)
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: ExecuteRPC(in RemoteCall)
  nameWithType: SyncableField.ExecuteRPC(in RemoteCall)
  fullName: LiteEntitySystem.SyncableField.ExecuteRPC(in LiteEntitySystem.RemoteCall)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: protected void ExecuteRPC(in RemoteCall rpc)
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCall
    content.vb: Protected Sub ExecuteRPC(rpc As RemoteCall)
  overload: LiteEntitySystem.SyncableField.ExecuteRPC*
  nameWithType.vb: SyncableField.ExecuteRPC(RemoteCall)
  fullName.vb: LiteEntitySystem.SyncableField.ExecuteRPC(LiteEntitySystem.RemoteCall)
  name.vb: ExecuteRPC(RemoteCall)
- uid: LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  commentId: M:LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  id: ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: ExecuteRPC<T>(in RemoteCall<T>, T)
  nameWithType: SyncableField.ExecuteRPC<T>(in RemoteCall<T>, T)
  fullName: LiteEntitySystem.SyncableField.ExecuteRPC<T>(in LiteEntitySystem.RemoteCall<T>, T)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: 'protected void ExecuteRPC<T>(in RemoteCall<T> rpc, T value) where T : unmanaged'
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCall{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Protected Sub ExecuteRPC(Of T As Structure)(rpc As RemoteCall(Of T), value As T)
  overload: LiteEntitySystem.SyncableField.ExecuteRPC*
  nameWithType.vb: SyncableField.ExecuteRPC(Of T)(RemoteCall(Of T), T)
  fullName.vb: LiteEntitySystem.SyncableField.ExecuteRPC(Of T)(LiteEntitySystem.RemoteCall(Of T), T)
  name.vb: ExecuteRPC(Of T)(RemoteCall(Of T), T)
- uid: LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  commentId: M:LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  id: ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: ExecuteRPC<T>(in RemoteCallSpan<T>, ReadOnlySpan<T>)
  nameWithType: SyncableField.ExecuteRPC<T>(in RemoteCallSpan<T>, ReadOnlySpan<T>)
  fullName: LiteEntitySystem.SyncableField.ExecuteRPC<T>(in LiteEntitySystem.RemoteCallSpan<T>, System.ReadOnlySpan<T>)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: 'protected void ExecuteRPC<T>(in RemoteCallSpan<T> rpc, ReadOnlySpan<T> value) where T : unmanaged'
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCallSpan{{T}}
    - id: value
      type: System.ReadOnlySpan{{T}}
    typeParameters:
    - id: T
    content.vb: Protected Sub ExecuteRPC(Of T As Structure)(rpc As RemoteCallSpan(Of T), value As ReadOnlySpan(Of T))
  overload: LiteEntitySystem.SyncableField.ExecuteRPC*
  nameWithType.vb: SyncableField.ExecuteRPC(Of T)(RemoteCallSpan(Of T), ReadOnlySpan(Of T))
  fullName.vb: LiteEntitySystem.SyncableField.ExecuteRPC(Of T)(LiteEntitySystem.RemoteCallSpan(Of T), System.ReadOnlySpan(Of T))
  name.vb: ExecuteRPC(Of T)(RemoteCallSpan(Of T), ReadOnlySpan(Of T))
- uid: LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  commentId: M:LiteEntitySystem.SyncableField.ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  id: ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  parent: LiteEntitySystem.SyncableField
  langs:
  - csharp
  - vb
  name: ExecuteRPC<T>(in RemoteCallSerializable<T>, T)
  nameWithType: SyncableField.ExecuteRPC<T>(in RemoteCallSerializable<T>, T)
  fullName: LiteEntitySystem.SyncableField.ExecuteRPC<T>(in LiteEntitySystem.RemoteCallSerializable<T>, T)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: 'protected void ExecuteRPC<T>(in RemoteCallSerializable<T> rpc, T value) where T : struct, ISpanSerializable'
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCallSerializable{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Protected Sub ExecuteRPC(Of T As {Structure, ISpanSerializable})(rpc As RemoteCallSerializable(Of T), value As T)
  overload: LiteEntitySystem.SyncableField.ExecuteRPC*
  nameWithType.vb: SyncableField.ExecuteRPC(Of T)(RemoteCallSerializable(Of T), T)
  fullName.vb: LiteEntitySystem.SyncableField.ExecuteRPC(Of T)(LiteEntitySystem.RemoteCallSerializable(Of T), T)
  name.vb: ExecuteRPC(Of T)(RemoteCallSerializable(Of T), T)
references:
- uid: LiteEntitySystem
  commentId: N:LiteEntitySystem
  href: LiteEntitySystem.html
  name: LiteEntitySystem
  nameWithType: LiteEntitySystem
  fullName: LiteEntitySystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: LiteEntitySystem.Internal.InternalBaseClass
  commentId: T:LiteEntitySystem.Internal.InternalBaseClass
  parent: LiteEntitySystem.Internal
  href: LiteEntitySystem.Internal.InternalBaseClass.html
  name: InternalBaseClass
  nameWithType: InternalBaseClass
  fullName: LiteEntitySystem.Internal.InternalBaseClass
- uid: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
  commentId: M:LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
  parent: LiteEntitySystem.Internal.InternalBaseClass
  href: LiteEntitySystem.Internal.InternalBaseClass.html#LiteEntitySystem_Internal_InternalBaseClass_OnSyncRequested
  name: OnSyncRequested()
  nameWithType: InternalBaseClass.OnSyncRequested()
  fullName: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested()
  spec.csharp:
  - uid: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
    name: OnSyncRequested
    href: LiteEntitySystem.Internal.InternalBaseClass.html#LiteEntitySystem_Internal_InternalBaseClass_OnSyncRequested
  - name: (
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
    name: OnSyncRequested
    href: LiteEntitySystem.Internal.InternalBaseClass.html#LiteEntitySystem_Internal_InternalBaseClass_OnSyncRequested
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LiteEntitySystem.Internal
  commentId: N:LiteEntitySystem.Internal
  href: LiteEntitySystem.html
  name: LiteEntitySystem.Internal
  nameWithType: LiteEntitySystem.Internal
  fullName: LiteEntitySystem.Internal
  spec.csharp:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Internal
    name: Internal
    href: LiteEntitySystem.Internal.html
  spec.vb:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Internal
    name: Internal
    href: LiteEntitySystem.Internal.html
- uid: LiteEntitySystem.SyncableField.IsClient*
  commentId: Overload:LiteEntitySystem.SyncableField.IsClient
  href: LiteEntitySystem.SyncableField.html#LiteEntitySystem_SyncableField_IsClient
  name: IsClient
  nameWithType: SyncableField.IsClient
  fullName: LiteEntitySystem.SyncableField.IsClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiteEntitySystem.SyncableField.IsServer*
  commentId: Overload:LiteEntitySystem.SyncableField.IsServer
  href: LiteEntitySystem.SyncableField.html#LiteEntitySystem_SyncableField_IsServer
  name: IsServer
  nameWithType: SyncableField.IsServer
  fullName: LiteEntitySystem.SyncableField.IsServer
- uid: LiteEntitySystem.SyncableField.ParentEntity*
  commentId: Overload:LiteEntitySystem.SyncableField.ParentEntity
  href: LiteEntitySystem.SyncableField.html#LiteEntitySystem_SyncableField_ParentEntity
  name: ParentEntity
  nameWithType: SyncableField.ParentEntity
  fullName: LiteEntitySystem.SyncableField.ParentEntity
- uid: LiteEntitySystem.Internal.InternalEntity
  commentId: T:LiteEntitySystem.Internal.InternalEntity
  parent: LiteEntitySystem.Internal
  href: LiteEntitySystem.Internal.InternalEntity.html
  name: InternalEntity
  nameWithType: InternalEntity
  fullName: LiteEntitySystem.Internal.InternalEntity
- uid: LiteEntitySystem.SyncableField.ParentEntityLogic*
  commentId: Overload:LiteEntitySystem.SyncableField.ParentEntityLogic
  href: LiteEntitySystem.SyncableField.html#LiteEntitySystem_SyncableField_ParentEntityLogic
  name: ParentEntityLogic
  nameWithType: SyncableField.ParentEntityLogic
  fullName: LiteEntitySystem.SyncableField.ParentEntityLogic
- uid: LiteEntitySystem.EntityLogic
  commentId: T:LiteEntitySystem.EntityLogic
  parent: LiteEntitySystem
  href: LiteEntitySystem.EntityLogic.html
  name: EntityLogic
  nameWithType: EntityLogic
  fullName: LiteEntitySystem.EntityLogic
- uid: LiteEntitySystem.SyncableField.RegisterRPC*
  commentId: Overload:LiteEntitySystem.SyncableField.RegisterRPC
  href: LiteEntitySystem.SyncableField.html#LiteEntitySystem_SyncableField_RegisterRPC_LiteEntitySystem_SyncableRPCRegistrator__
  name: RegisterRPC
  nameWithType: SyncableField.RegisterRPC
  fullName: LiteEntitySystem.SyncableField.RegisterRPC
- uid: LiteEntitySystem.SyncableRPCRegistrator
  commentId: T:LiteEntitySystem.SyncableRPCRegistrator
  parent: LiteEntitySystem
  href: LiteEntitySystem.SyncableRPCRegistrator.html
  name: SyncableRPCRegistrator
  nameWithType: SyncableRPCRegistrator
  fullName: LiteEntitySystem.SyncableRPCRegistrator
- uid: LiteEntitySystem.SyncableField.ExecuteRPC*
  commentId: Overload:LiteEntitySystem.SyncableField.ExecuteRPC
  href: LiteEntitySystem.SyncableField.html#LiteEntitySystem_SyncableField_ExecuteRPC_LiteEntitySystem_RemoteCall__
  name: ExecuteRPC
  nameWithType: SyncableField.ExecuteRPC
  fullName: LiteEntitySystem.SyncableField.ExecuteRPC
- uid: LiteEntitySystem.RemoteCall
  commentId: T:LiteEntitySystem.RemoteCall
  parent: LiteEntitySystem
  href: LiteEntitySystem.RemoteCall.html
  name: RemoteCall
  nameWithType: RemoteCall
  fullName: LiteEntitySystem.RemoteCall
- uid: LiteEntitySystem.RemoteCall{{T}}
  commentId: T:LiteEntitySystem.RemoteCall{``1}
  parent: LiteEntitySystem
  definition: LiteEntitySystem.RemoteCall`1
  href: LiteEntitySystem.RemoteCall-1.html
  name: RemoteCall<T>
  nameWithType: RemoteCall<T>
  fullName: LiteEntitySystem.RemoteCall<T>
  nameWithType.vb: RemoteCall(Of T)
  fullName.vb: LiteEntitySystem.RemoteCall(Of T)
  name.vb: RemoteCall(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: LiteEntitySystem.RemoteCall`1
  commentId: T:LiteEntitySystem.RemoteCall`1
  href: LiteEntitySystem.RemoteCall-1.html
  name: RemoteCall<T>
  nameWithType: RemoteCall<T>
  fullName: LiteEntitySystem.RemoteCall<T>
  nameWithType.vb: RemoteCall(Of T)
  fullName.vb: LiteEntitySystem.RemoteCall(Of T)
  name.vb: RemoteCall(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: LiteEntitySystem.RemoteCallSpan{{T}}
  commentId: T:LiteEntitySystem.RemoteCallSpan{``1}
  parent: LiteEntitySystem
  definition: LiteEntitySystem.RemoteCallSpan`1
  href: LiteEntitySystem.RemoteCallSpan-1.html
  name: RemoteCallSpan<T>
  nameWithType: RemoteCallSpan<T>
  fullName: LiteEntitySystem.RemoteCallSpan<T>
  nameWithType.vb: RemoteCallSpan(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSpan(Of T)
  name.vb: RemoteCallSpan(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan{{T}}
  commentId: T:System.ReadOnlySpan{``0}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.RemoteCallSpan`1
  commentId: T:LiteEntitySystem.RemoteCallSpan`1
  href: LiteEntitySystem.RemoteCallSpan-1.html
  name: RemoteCallSpan<T>
  nameWithType: RemoteCallSpan<T>
  fullName: LiteEntitySystem.RemoteCallSpan<T>
  nameWithType.vb: RemoteCallSpan(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSpan(Of T)
  name.vb: RemoteCallSpan(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.RemoteCallSerializable{{T}}
  commentId: T:LiteEntitySystem.RemoteCallSerializable{``1}
  parent: LiteEntitySystem
  definition: LiteEntitySystem.RemoteCallSerializable`1
  href: LiteEntitySystem.RemoteCallSerializable-1.html
  name: RemoteCallSerializable<T>
  nameWithType: RemoteCallSerializable<T>
  fullName: LiteEntitySystem.RemoteCallSerializable<T>
  nameWithType.vb: RemoteCallSerializable(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSerializable(Of T)
  name.vb: RemoteCallSerializable(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.RemoteCallSerializable`1
  commentId: T:LiteEntitySystem.RemoteCallSerializable`1
  href: LiteEntitySystem.RemoteCallSerializable-1.html
  name: RemoteCallSerializable<T>
  nameWithType: RemoteCallSerializable<T>
  fullName: LiteEntitySystem.RemoteCallSerializable<T>
  nameWithType.vb: RemoteCallSerializable(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSerializable(Of T)
  name.vb: RemoteCallSerializable(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
