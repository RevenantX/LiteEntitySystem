### YamlMime:ManagedReference
items:
- uid: LiteEntitySystem.Extensions.FloatAngle
  commentId: T:LiteEntitySystem.Extensions.FloatAngle
  id: FloatAngle
  parent: LiteEntitySystem.Extensions
  children:
  - LiteEntitySystem.Extensions.FloatAngle.#ctor(System.Single)
  - LiteEntitySystem.Extensions.FloatAngle.Cos
  - LiteEntitySystem.Extensions.FloatAngle.Deg2Rad
  - LiteEntitySystem.Extensions.FloatAngle.Degrees
  - LiteEntitySystem.Extensions.FloatAngle.FromRadians(System.Single)
  - LiteEntitySystem.Extensions.FloatAngle.Lerp(LiteEntitySystem.Extensions.FloatAngle,LiteEntitySystem.Extensions.FloatAngle,System.Single)
  - LiteEntitySystem.Extensions.FloatAngle.Normalize
  - LiteEntitySystem.Extensions.FloatAngle.Normalized
  - LiteEntitySystem.Extensions.FloatAngle.PI
  - LiteEntitySystem.Extensions.FloatAngle.Rad2Deg
  - LiteEntitySystem.Extensions.FloatAngle.Radians
  - LiteEntitySystem.Extensions.FloatAngle.Sin
  - LiteEntitySystem.Extensions.FloatAngle.ToString
  - LiteEntitySystem.Extensions.FloatAngle.op_Implicit(LiteEntitySystem.Extensions.FloatAngle)~System.Single
  - LiteEntitySystem.Extensions.FloatAngle.op_Implicit(System.Single)~LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: FloatAngle
  nameWithType: FloatAngle
  fullName: LiteEntitySystem.Extensions.FloatAngle
  type: Struct
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  summary: Float angle in degress with correct interpolation and overlaps
  example: []
  syntax:
    content: public struct FloatAngle
    content.vb: Public Structure FloatAngle
- uid: LiteEntitySystem.Extensions.FloatAngle.PI
  commentId: F:LiteEntitySystem.Extensions.FloatAngle.PI
  id: PI
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: PI
  nameWithType: FloatAngle.PI
  fullName: LiteEntitySystem.Extensions.FloatAngle.PI
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public const float PI = 3.1415927
    return:
      type: System.Single
    content.vb: Public Const PI As Single = 3.1415927
- uid: LiteEntitySystem.Extensions.FloatAngle.Rad2Deg
  commentId: F:LiteEntitySystem.Extensions.FloatAngle.Rad2Deg
  id: Rad2Deg
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Rad2Deg
  nameWithType: FloatAngle.Rad2Deg
  fullName: LiteEntitySystem.Extensions.FloatAngle.Rad2Deg
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public const float Rad2Deg = 57.29578
    return:
      type: System.Single
    content.vb: Public Const Rad2Deg As Single = 57.29578
- uid: LiteEntitySystem.Extensions.FloatAngle.Deg2Rad
  commentId: F:LiteEntitySystem.Extensions.FloatAngle.Deg2Rad
  id: Deg2Rad
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Deg2Rad
  nameWithType: FloatAngle.Deg2Rad
  fullName: LiteEntitySystem.Extensions.FloatAngle.Deg2Rad
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public const float Deg2Rad = 0.017453292
    return:
      type: System.Single
    content.vb: Public Const Deg2Rad As Single = 0.017453292
- uid: LiteEntitySystem.Extensions.FloatAngle.Radians
  commentId: P:LiteEntitySystem.Extensions.FloatAngle.Radians
  id: Radians
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Radians
  nameWithType: FloatAngle.Radians
  fullName: LiteEntitySystem.Extensions.FloatAngle.Radians
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public float Radians { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Radians As Single
  overload: LiteEntitySystem.Extensions.FloatAngle.Radians*
- uid: LiteEntitySystem.Extensions.FloatAngle.Degrees
  commentId: F:LiteEntitySystem.Extensions.FloatAngle.Degrees
  id: Degrees
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Degrees
  nameWithType: FloatAngle.Degrees
  fullName: LiteEntitySystem.Extensions.FloatAngle.Degrees
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public float Degrees
    return:
      type: System.Single
    content.vb: Public Degrees As Single
- uid: LiteEntitySystem.Extensions.FloatAngle.Normalized
  commentId: P:LiteEntitySystem.Extensions.FloatAngle.Normalized
  id: Normalized
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: FloatAngle.Normalized
  fullName: LiteEntitySystem.Extensions.FloatAngle.Normalized
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public FloatAngle Normalized { get; }
    parameters: []
    return:
      type: LiteEntitySystem.Extensions.FloatAngle
    content.vb: Public ReadOnly Property Normalized As FloatAngle
  overload: LiteEntitySystem.Extensions.FloatAngle.Normalized*
- uid: LiteEntitySystem.Extensions.FloatAngle.Sin
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.Sin
  id: Sin
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Sin()
  nameWithType: FloatAngle.Sin()
  fullName: LiteEntitySystem.Extensions.FloatAngle.Sin()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public float Sin()
    return:
      type: System.Single
    content.vb: Public Function Sin() As Single
  overload: LiteEntitySystem.Extensions.FloatAngle.Sin*
- uid: LiteEntitySystem.Extensions.FloatAngle.Cos
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.Cos
  id: Cos
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Cos()
  nameWithType: FloatAngle.Cos()
  fullName: LiteEntitySystem.Extensions.FloatAngle.Cos()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public float Cos()
    return:
      type: System.Single
    content.vb: Public Function Cos() As Single
  overload: LiteEntitySystem.Extensions.FloatAngle.Cos*
- uid: LiteEntitySystem.Extensions.FloatAngle.#ctor(System.Single)
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: FloatAngle(float)
  nameWithType: FloatAngle.FloatAngle(float)
  fullName: LiteEntitySystem.Extensions.FloatAngle.FloatAngle(float)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public FloatAngle(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub New(value As Single)
  overload: LiteEntitySystem.Extensions.FloatAngle.#ctor*
  nameWithType.vb: FloatAngle.New(Single)
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.New(Single)
  name.vb: New(Single)
- uid: LiteEntitySystem.Extensions.FloatAngle.Normalize
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.Normalize
  id: Normalize
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: FloatAngle.Normalize()
  fullName: LiteEntitySystem.Extensions.FloatAngle.Normalize()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: LiteEntitySystem.Extensions.FloatAngle.Normalize*
- uid: LiteEntitySystem.Extensions.FloatAngle.ToString
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.ToString
  id: ToString
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FloatAngle.ToString()
  fullName: LiteEntitySystem.Extensions.FloatAngle.ToString()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: LiteEntitySystem.Extensions.FloatAngle.ToString*
- uid: LiteEntitySystem.Extensions.FloatAngle.op_Implicit(System.Single)~LiteEntitySystem.Extensions.FloatAngle
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.op_Implicit(System.Single)~LiteEntitySystem.Extensions.FloatAngle
  id: op_Implicit(System.Single)~LiteEntitySystem.Extensions.FloatAngle
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: implicit operator FloatAngle(float)
  nameWithType: FloatAngle.implicit operator FloatAngle(float)
  fullName: LiteEntitySystem.Extensions.FloatAngle.implicit operator LiteEntitySystem.Extensions.FloatAngle(float)
  type: Operator
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public static implicit operator FloatAngle(float degrees)
    parameters:
    - id: degrees
      type: System.Single
    return:
      type: LiteEntitySystem.Extensions.FloatAngle
    content.vb: Public Shared Widening Operator CType(degrees As Single) As FloatAngle
  overload: LiteEntitySystem.Extensions.FloatAngle.op_Implicit*
  nameWithType.vb: FloatAngle.CType(Single)
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.CType(Single)
  name.vb: CType(Single)
- uid: LiteEntitySystem.Extensions.FloatAngle.op_Implicit(LiteEntitySystem.Extensions.FloatAngle)~System.Single
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.op_Implicit(LiteEntitySystem.Extensions.FloatAngle)~System.Single
  id: op_Implicit(LiteEntitySystem.Extensions.FloatAngle)~System.Single
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: implicit operator float(FloatAngle)
  nameWithType: FloatAngle.implicit operator float(FloatAngle)
  fullName: LiteEntitySystem.Extensions.FloatAngle.implicit operator float(LiteEntitySystem.Extensions.FloatAngle)
  type: Operator
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public static implicit operator float(FloatAngle value)
    parameters:
    - id: value
      type: LiteEntitySystem.Extensions.FloatAngle
    return:
      type: System.Single
    content.vb: Public Shared Widening Operator CType(value As FloatAngle) As Single
  overload: LiteEntitySystem.Extensions.FloatAngle.op_Implicit*
  nameWithType.vb: FloatAngle.CType(FloatAngle)
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.CType(LiteEntitySystem.Extensions.FloatAngle)
  name.vb: CType(FloatAngle)
- uid: LiteEntitySystem.Extensions.FloatAngle.Lerp(LiteEntitySystem.Extensions.FloatAngle,LiteEntitySystem.Extensions.FloatAngle,System.Single)
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.Lerp(LiteEntitySystem.Extensions.FloatAngle,LiteEntitySystem.Extensions.FloatAngle,System.Single)
  id: Lerp(LiteEntitySystem.Extensions.FloatAngle,LiteEntitySystem.Extensions.FloatAngle,System.Single)
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: Lerp(FloatAngle, FloatAngle, float)
  nameWithType: FloatAngle.Lerp(FloatAngle, FloatAngle, float)
  fullName: LiteEntitySystem.Extensions.FloatAngle.Lerp(LiteEntitySystem.Extensions.FloatAngle, LiteEntitySystem.Extensions.FloatAngle, float)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public static FloatAngle Lerp(FloatAngle a, FloatAngle b, float t)
    parameters:
    - id: a
      type: LiteEntitySystem.Extensions.FloatAngle
    - id: b
      type: LiteEntitySystem.Extensions.FloatAngle
    - id: t
      type: System.Single
    return:
      type: LiteEntitySystem.Extensions.FloatAngle
    content.vb: Public Shared Function Lerp(a As FloatAngle, b As FloatAngle, t As Single) As FloatAngle
  overload: LiteEntitySystem.Extensions.FloatAngle.Lerp*
  nameWithType.vb: FloatAngle.Lerp(FloatAngle, FloatAngle, Single)
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.Lerp(LiteEntitySystem.Extensions.FloatAngle, LiteEntitySystem.Extensions.FloatAngle, Single)
  name.vb: Lerp(FloatAngle, FloatAngle, Single)
- uid: LiteEntitySystem.Extensions.FloatAngle.FromRadians(System.Single)
  commentId: M:LiteEntitySystem.Extensions.FloatAngle.FromRadians(System.Single)
  id: FromRadians(System.Single)
  parent: LiteEntitySystem.Extensions.FloatAngle
  langs:
  - csharp
  - vb
  name: FromRadians(float)
  nameWithType: FloatAngle.FromRadians(float)
  fullName: LiteEntitySystem.Extensions.FloatAngle.FromRadians(float)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Extensions
  syntax:
    content: public static FloatAngle FromRadians(float inputRotation)
    parameters:
    - id: inputRotation
      type: System.Single
    return:
      type: LiteEntitySystem.Extensions.FloatAngle
    content.vb: Public Shared Function FromRadians(inputRotation As Single) As FloatAngle
  overload: LiteEntitySystem.Extensions.FloatAngle.FromRadians*
  nameWithType.vb: FloatAngle.FromRadians(Single)
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.FromRadians(Single)
  name.vb: FromRadians(Single)
references:
- uid: LiteEntitySystem.Extensions
  commentId: N:LiteEntitySystem.Extensions
  href: LiteEntitySystem.html
  name: LiteEntitySystem.Extensions
  nameWithType: LiteEntitySystem.Extensions
  fullName: LiteEntitySystem.Extensions
  spec.csharp:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Extensions
    name: Extensions
    href: LiteEntitySystem.Extensions.html
  spec.vb:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Extensions
    name: Extensions
    href: LiteEntitySystem.Extensions.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LiteEntitySystem.Extensions.FloatAngle.Radians*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.Radians
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_Radians
  name: Radians
  nameWithType: FloatAngle.Radians
  fullName: LiteEntitySystem.Extensions.FloatAngle.Radians
- uid: LiteEntitySystem.Extensions.FloatAngle.Normalized*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.Normalized
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_Normalized
  name: Normalized
  nameWithType: FloatAngle.Normalized
  fullName: LiteEntitySystem.Extensions.FloatAngle.Normalized
- uid: LiteEntitySystem.Extensions.FloatAngle
  commentId: T:LiteEntitySystem.Extensions.FloatAngle
  parent: LiteEntitySystem.Extensions
  href: LiteEntitySystem.Extensions.FloatAngle.html
  name: FloatAngle
  nameWithType: FloatAngle
  fullName: LiteEntitySystem.Extensions.FloatAngle
- uid: LiteEntitySystem.Extensions.FloatAngle.Sin*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.Sin
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_Sin
  name: Sin
  nameWithType: FloatAngle.Sin
  fullName: LiteEntitySystem.Extensions.FloatAngle.Sin
- uid: LiteEntitySystem.Extensions.FloatAngle.Cos*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.Cos
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_Cos
  name: Cos
  nameWithType: FloatAngle.Cos
  fullName: LiteEntitySystem.Extensions.FloatAngle.Cos
- uid: LiteEntitySystem.Extensions.FloatAngle.#ctor*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.#ctor
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle__ctor_System_Single_
  name: FloatAngle
  nameWithType: FloatAngle.FloatAngle
  fullName: LiteEntitySystem.Extensions.FloatAngle.FloatAngle
  nameWithType.vb: FloatAngle.New
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.New
  name.vb: New
- uid: LiteEntitySystem.Extensions.FloatAngle.Normalize*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.Normalize
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_Normalize
  name: Normalize
  nameWithType: FloatAngle.Normalize
  fullName: LiteEntitySystem.Extensions.FloatAngle.Normalize
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: LiteEntitySystem.Extensions.FloatAngle.ToString*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.ToString
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_ToString
  name: ToString
  nameWithType: FloatAngle.ToString
  fullName: LiteEntitySystem.Extensions.FloatAngle.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: LiteEntitySystem.Extensions.FloatAngle.op_Implicit*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.op_Implicit
  name: implicit operator
  nameWithType: FloatAngle.implicit operator
  fullName: LiteEntitySystem.Extensions.FloatAngle.implicit operator
  nameWithType.vb: FloatAngle.CType
  fullName.vb: LiteEntitySystem.Extensions.FloatAngle.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: LiteEntitySystem.Extensions.FloatAngle.Lerp*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.Lerp
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_Lerp_LiteEntitySystem_Extensions_FloatAngle_LiteEntitySystem_Extensions_FloatAngle_System_Single_
  name: Lerp
  nameWithType: FloatAngle.Lerp
  fullName: LiteEntitySystem.Extensions.FloatAngle.Lerp
- uid: LiteEntitySystem.Extensions.FloatAngle.FromRadians*
  commentId: Overload:LiteEntitySystem.Extensions.FloatAngle.FromRadians
  href: LiteEntitySystem.Extensions.FloatAngle.html#LiteEntitySystem_Extensions_FloatAngle_FromRadians_System_Single_
  name: FromRadians
  nameWithType: FloatAngle.FromRadians
  fullName: LiteEntitySystem.Extensions.FloatAngle.FromRadians
