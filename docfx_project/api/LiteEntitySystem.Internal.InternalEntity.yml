### YamlMime:ManagedReference
items:
- uid: LiteEntitySystem.Internal.InternalEntity
  commentId: T:LiteEntitySystem.Internal.InternalEntity
  id: InternalEntity
  parent: LiteEntitySystem.Internal
  children:
  - LiteEntitySystem.Internal.InternalEntity.#ctor(LiteEntitySystem.EntityParams)
  - LiteEntitySystem.Internal.InternalEntity.ClassId
  - LiteEntitySystem.Internal.InternalEntity.ClientManager
  - LiteEntitySystem.Internal.InternalEntity.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  - LiteEntitySystem.Internal.InternalEntity.Destroy
  - LiteEntitySystem.Internal.InternalEntity.EntityManager
  - LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(LiteEntitySystem.RemoteCall@)
  - LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  - LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  - LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  - LiteEntitySystem.Internal.InternalEntity.GetHashCode
  - LiteEntitySystem.Internal.InternalEntity.Id
  - LiteEntitySystem.Internal.InternalEntity.IsClient
  - LiteEntitySystem.Internal.InternalEntity.IsConstructed
  - LiteEntitySystem.Internal.InternalEntity.IsDestroyed
  - LiteEntitySystem.Internal.InternalEntity.IsLocal
  - LiteEntitySystem.Internal.InternalEntity.IsLocalControlled
  - LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled
  - LiteEntitySystem.Internal.InternalEntity.IsRemoved
  - LiteEntitySystem.Internal.InternalEntity.IsServer
  - LiteEntitySystem.Internal.InternalEntity.IsServerControlled
  - LiteEntitySystem.Internal.InternalEntity.IsSingleton
  - LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback
  - LiteEntitySystem.Internal.InternalEntity.OnConstructed
  - LiteEntitySystem.Internal.InternalEntity.OnDestroy
  - LiteEntitySystem.Internal.InternalEntity.OnLateConstructed
  - LiteEntitySystem.Internal.InternalEntity.OnRollback
  - LiteEntitySystem.Internal.InternalEntity.OwnerId
  - LiteEntitySystem.Internal.InternalEntity.RegisterRPC(LiteEntitySystem.RPCRegistrator@)
  - LiteEntitySystem.Internal.InternalEntity.ServerManager
  - LiteEntitySystem.Internal.InternalEntity.State
  - LiteEntitySystem.Internal.InternalEntity.ToString
  - LiteEntitySystem.Internal.InternalEntity.Update
  - LiteEntitySystem.Internal.InternalEntity.Version
  - LiteEntitySystem.Internal.InternalEntity.VisualUpdate
  langs:
  - csharp
  - vb
  name: InternalEntity
  nameWithType: InternalEntity
  fullName: LiteEntitySystem.Internal.InternalEntity
  type: Class
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  syntax:
    content: 'public abstract class InternalEntity : InternalBaseClass, IComparable<InternalEntity>'
    content.vb: Public MustInherit Class InternalEntity Inherits InternalBaseClass Implements IComparable(Of InternalEntity)
  inheritance:
  - System.Object
  - LiteEntitySystem.Internal.InternalBaseClass
  derivedClasses:
  - LiteEntitySystem.ControllerLogic
  - LiteEntitySystem.EntityLogic
  - LiteEntitySystem.SingletonEntityLogic
  implements:
  - System.IComparable{LiteEntitySystem.Internal.InternalEntity}
  inheritedMembers:
  - LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
- uid: LiteEntitySystem.Internal.InternalEntity.ClassId
  commentId: F:LiteEntitySystem.Internal.InternalEntity.ClassId
  id: ClassId
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ClassId
  nameWithType: InternalEntity.ClassId
  fullName: LiteEntitySystem.Internal.InternalEntity.ClassId
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Entity class id
  example: []
  syntax:
    content: public readonly ushort ClassId
    return:
      type: System.UInt16
    content.vb: Public ReadOnly ClassId As UShort
- uid: LiteEntitySystem.Internal.InternalEntity.Id
  commentId: F:LiteEntitySystem.Internal.InternalEntity.Id
  id: Id
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: InternalEntity.Id
  fullName: LiteEntitySystem.Internal.InternalEntity.Id
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Entity instance id
  example: []
  syntax:
    content: public readonly ushort Id
    return:
      type: System.UInt16
    content.vb: Public ReadOnly Id As UShort
- uid: LiteEntitySystem.Internal.InternalEntity.EntityManager
  commentId: F:LiteEntitySystem.Internal.InternalEntity.EntityManager
  id: EntityManager
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: EntityManager
  nameWithType: InternalEntity.EntityManager
  fullName: LiteEntitySystem.Internal.InternalEntity.EntityManager
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Entity manager
  example: []
  syntax:
    content: public readonly EntityManager EntityManager
    return:
      type: LiteEntitySystem.EntityManager
    content.vb: Public ReadOnly EntityManager As EntityManager
- uid: LiteEntitySystem.Internal.InternalEntity.IsServer
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsServer
  id: IsServer
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsServer
  nameWithType: InternalEntity.IsServer
  fullName: LiteEntitySystem.Internal.InternalEntity.IsServer
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity on server
  example: []
  syntax:
    content: public bool IsServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsServer As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsServer*
- uid: LiteEntitySystem.Internal.InternalEntity.IsClient
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsClient
  id: IsClient
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsClient
  nameWithType: InternalEntity.IsClient
  fullName: LiteEntitySystem.Internal.InternalEntity.IsClient
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity on server
  example: []
  syntax:
    content: public bool IsClient { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClient As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsClient*
- uid: LiteEntitySystem.Internal.InternalEntity.Version
  commentId: F:LiteEntitySystem.Internal.InternalEntity.Version
  id: Version
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: InternalEntity.Version
  fullName: LiteEntitySystem.Internal.InternalEntity.Version
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Entity version (for id reuse)
  example: []
  syntax:
    content: public readonly byte Version
    return:
      type: System.Byte
    content.vb: Public ReadOnly Version As Byte
- uid: LiteEntitySystem.Internal.InternalEntity.IsDestroyed
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsDestroyed
  id: IsDestroyed
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsDestroyed
  nameWithType: InternalEntity.IsDestroyed
  fullName: LiteEntitySystem.Internal.InternalEntity.IsDestroyed
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity is destroyed
  example: []
  syntax:
    content: public bool IsDestroyed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDestroyed As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsDestroyed*
- uid: LiteEntitySystem.Internal.InternalEntity.IsLocalControlled
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsLocalControlled
  id: IsLocalControlled
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsLocalControlled
  nameWithType: InternalEntity.IsLocalControlled
  fullName: LiteEntitySystem.Internal.InternalEntity.IsLocalControlled
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity local controlled
  example: []
  syntax:
    content: public bool IsLocalControlled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocalControlled As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsLocalControlled*
- uid: LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled
  id: IsRemoteControlled
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsRemoteControlled
  nameWithType: InternalEntity.IsRemoteControlled
  fullName: LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity remote controlled
  example: []
  syntax:
    content: public bool IsRemoteControlled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRemoteControlled As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled*
- uid: LiteEntitySystem.Internal.InternalEntity.IsServerControlled
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsServerControlled
  id: IsServerControlled
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsServerControlled
  nameWithType: InternalEntity.IsServerControlled
  fullName: LiteEntitySystem.Internal.InternalEntity.IsServerControlled
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity is controlled by server
  example: []
  syntax:
    content: public bool IsServerControlled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsServerControlled As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsServerControlled*
- uid: LiteEntitySystem.Internal.InternalEntity.ClientManager
  commentId: P:LiteEntitySystem.Internal.InternalEntity.ClientManager
  id: ClientManager
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ClientManager
  nameWithType: InternalEntity.ClientManager
  fullName: LiteEntitySystem.Internal.InternalEntity.ClientManager
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: ClientEntityManager that available only on client. Will throw exception if called on server
  example: []
  syntax:
    content: public ClientEntityManager ClientManager { get; }
    parameters: []
    return:
      type: LiteEntitySystem.ClientEntityManager
    content.vb: Public ReadOnly Property ClientManager As ClientEntityManager
  overload: LiteEntitySystem.Internal.InternalEntity.ClientManager*
- uid: LiteEntitySystem.Internal.InternalEntity.ServerManager
  commentId: P:LiteEntitySystem.Internal.InternalEntity.ServerManager
  id: ServerManager
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ServerManager
  nameWithType: InternalEntity.ServerManager
  fullName: LiteEntitySystem.Internal.InternalEntity.ServerManager
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: ServerEntityManager that available only on server. Will throw exception if called on client
  example: []
  syntax:
    content: public ServerEntityManager ServerManager { get; }
    parameters: []
    return:
      type: LiteEntitySystem.ServerEntityManager
    content.vb: Public ReadOnly Property ServerManager As ServerEntityManager
  overload: LiteEntitySystem.Internal.InternalEntity.ServerManager*
- uid: LiteEntitySystem.Internal.InternalEntity.OwnerId
  commentId: P:LiteEntitySystem.Internal.InternalEntity.OwnerId
  id: OwnerId
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: OwnerId
  nameWithType: InternalEntity.OwnerId
  fullName: LiteEntitySystem.Internal.InternalEntity.OwnerId
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: >-
    Owner player id

    ServerPlayerId - 0

    Singletons always controlled by server
  example: []
  syntax:
    content: public byte OwnerId { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property OwnerId As Byte
  overload: LiteEntitySystem.Internal.InternalEntity.OwnerId*
- uid: LiteEntitySystem.Internal.InternalEntity.IsLocal
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsLocal
  id: IsLocal
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsLocal
  nameWithType: InternalEntity.IsLocal
  fullName: LiteEntitySystem.Internal.InternalEntity.IsLocal
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is locally created entity
  example: []
  syntax:
    content: public bool IsLocal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocal As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsLocal*
- uid: LiteEntitySystem.Internal.InternalEntity.IsSingleton
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsSingleton
  id: IsSingleton
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsSingleton
  nameWithType: InternalEntity.IsSingleton
  fullName: LiteEntitySystem.Internal.InternalEntity.IsSingleton
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity based on SingletonEntityLogic
  example: []
  syntax:
    content: public bool IsSingleton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSingleton As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsSingleton*
- uid: LiteEntitySystem.Internal.InternalEntity.IsConstructed
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsConstructed
  id: IsConstructed
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsConstructed
  nameWithType: InternalEntity.IsConstructed
  fullName: LiteEntitySystem.Internal.InternalEntity.IsConstructed
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity constructed (OnConstruct called)
  example: []
  syntax:
    content: public bool IsConstructed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConstructed As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsConstructed*
- uid: LiteEntitySystem.Internal.InternalEntity.IsRemoved
  commentId: P:LiteEntitySystem.Internal.InternalEntity.IsRemoved
  id: IsRemoved
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: IsRemoved
  nameWithType: InternalEntity.IsRemoved
  fullName: LiteEntitySystem.Internal.InternalEntity.IsRemoved
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Is entity released and not used after destroy.
  example: []
  syntax:
    content: public bool IsRemoved { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRemoved As Boolean
  overload: LiteEntitySystem.Internal.InternalEntity.IsRemoved*
- uid: LiteEntitySystem.Internal.InternalEntity.State
  commentId: P:LiteEntitySystem.Internal.InternalEntity.State
  id: State
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: State
  nameWithType: InternalEntity.State
  fullName: LiteEntitySystem.Internal.InternalEntity.State
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Entity state. New, Constructed, Destroyed, Removed
  example: []
  syntax:
    content: public EntityState State { get; }
    parameters: []
    return:
      type: LiteEntitySystem.Internal.EntityState
    content.vb: Public ReadOnly Property State As EntityState
  overload: LiteEntitySystem.Internal.InternalEntity.State*
- uid: LiteEntitySystem.Internal.InternalEntity.Destroy
  commentId: M:LiteEntitySystem.Internal.InternalEntity.Destroy
  id: Destroy
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: InternalEntity.Destroy()
  fullName: LiteEntitySystem.Internal.InternalEntity.Destroy()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Destroy entity
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: LiteEntitySystem.Internal.InternalEntity.Destroy*
- uid: LiteEntitySystem.Internal.InternalEntity.OnDestroy
  commentId: M:LiteEntitySystem.Internal.InternalEntity.OnDestroy
  id: OnDestroy
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: InternalEntity.OnDestroy()
  fullName: LiteEntitySystem.Internal.InternalEntity.OnDestroy()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Event called on entity destroy
  example: []
  syntax:
    content: protected virtual void OnDestroy()
    content.vb: Protected Overridable Sub OnDestroy()
  overload: LiteEntitySystem.Internal.InternalEntity.OnDestroy*
- uid: LiteEntitySystem.Internal.InternalEntity.Update
  commentId: M:LiteEntitySystem.Internal.InternalEntity.Update
  id: Update
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: InternalEntity.Update()
  fullName: LiteEntitySystem.Internal.InternalEntity.Update()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Fixed update. Called if entity has attribute <xref href="LiteEntitySystem.EntityFlagsAttribute" data-throw-if-not-resolved="false"></xref> and flag Updateable
  example: []
  syntax:
    content: protected virtual void Update()
    content.vb: Protected Overridable Sub Update()
  overload: LiteEntitySystem.Internal.InternalEntity.Update*
- uid: LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback
  commentId: M:LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback
  id: OnBeforeRollback
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: OnBeforeRollback()
  nameWithType: InternalEntity.OnBeforeRollback()
  fullName: LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Called at rollback begin before all values reset to first frame in rollback queue.
  example: []
  syntax:
    content: protected virtual void OnBeforeRollback()
    content.vb: Protected Overridable Sub OnBeforeRollback()
  overload: LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback*
- uid: LiteEntitySystem.Internal.InternalEntity.OnRollback
  commentId: M:LiteEntitySystem.Internal.InternalEntity.OnRollback
  id: OnRollback
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: OnRollback()
  nameWithType: InternalEntity.OnRollback()
  fullName: LiteEntitySystem.Internal.InternalEntity.OnRollback()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Called at rollback begin after all values reset to first frame in rollback queue.
  example: []
  syntax:
    content: protected virtual void OnRollback()
    content.vb: Protected Overridable Sub OnRollback()
  overload: LiteEntitySystem.Internal.InternalEntity.OnRollback*
- uid: LiteEntitySystem.Internal.InternalEntity.VisualUpdate
  commentId: M:LiteEntitySystem.Internal.InternalEntity.VisualUpdate
  id: VisualUpdate
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: VisualUpdate()
  nameWithType: InternalEntity.VisualUpdate()
  fullName: LiteEntitySystem.Internal.InternalEntity.VisualUpdate()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Called only on <xref href="LiteEntitySystem.ClientEntityManager.Update" data-throw-if-not-resolved="false"></xref> and if entity has attribute <xref href="LiteEntitySystem.EntityFlagsAttribute" data-throw-if-not-resolved="false"></xref> and flag Updateable
  example: []
  syntax:
    content: protected virtual void VisualUpdate()
    content.vb: Protected Overridable Sub VisualUpdate()
  overload: LiteEntitySystem.Internal.InternalEntity.VisualUpdate*
- uid: LiteEntitySystem.Internal.InternalEntity.OnConstructed
  commentId: M:LiteEntitySystem.Internal.InternalEntity.OnConstructed
  id: OnConstructed
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: OnConstructed()
  nameWithType: InternalEntity.OnConstructed()
  fullName: LiteEntitySystem.Internal.InternalEntity.OnConstructed()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Called when entity constructed
  example: []
  syntax:
    content: protected virtual void OnConstructed()
    content.vb: Protected Overridable Sub OnConstructed()
  overload: LiteEntitySystem.Internal.InternalEntity.OnConstructed*
- uid: LiteEntitySystem.Internal.InternalEntity.OnLateConstructed
  commentId: M:LiteEntitySystem.Internal.InternalEntity.OnLateConstructed
  id: OnLateConstructed
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: OnLateConstructed()
  nameWithType: InternalEntity.OnLateConstructed()
  fullName: LiteEntitySystem.Internal.InternalEntity.OnLateConstructed()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Called when entity constructed but at end of frame
  example: []
  syntax:
    content: protected virtual void OnLateConstructed()
    content.vb: Protected Overridable Sub OnLateConstructed()
  overload: LiteEntitySystem.Internal.InternalEntity.OnLateConstructed*
- uid: LiteEntitySystem.Internal.InternalEntity.RegisterRPC(LiteEntitySystem.RPCRegistrator@)
  commentId: M:LiteEntitySystem.Internal.InternalEntity.RegisterRPC(LiteEntitySystem.RPCRegistrator@)
  id: RegisterRPC(LiteEntitySystem.RPCRegistrator@)
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: RegisterRPC(ref RPCRegistrator)
  nameWithType: InternalEntity.RegisterRPC(ref RPCRegistrator)
  fullName: LiteEntitySystem.Internal.InternalEntity.RegisterRPC(ref LiteEntitySystem.RPCRegistrator)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Method for registering RPCs and OnChange notifications
  example: []
  syntax:
    content: protected virtual void RegisterRPC(ref RPCRegistrator r)
    parameters:
    - id: r
      type: LiteEntitySystem.RPCRegistrator
      description: ''
    content.vb: Protected Overridable Sub RegisterRPC(r As RPCRegistrator)
  overload: LiteEntitySystem.Internal.InternalEntity.RegisterRPC*
  nameWithType.vb: InternalEntity.RegisterRPC(RPCRegistrator)
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.RegisterRPC(LiteEntitySystem.RPCRegistrator)
  name.vb: RegisterRPC(RPCRegistrator)
- uid: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(LiteEntitySystem.RemoteCall@)
  commentId: M:LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(LiteEntitySystem.RemoteCall@)
  id: ExecuteRPC(LiteEntitySystem.RemoteCall@)
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ExecuteRPC(in RemoteCall)
  nameWithType: InternalEntity.ExecuteRPC(in RemoteCall)
  fullName: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(in LiteEntitySystem.RemoteCall)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  syntax:
    content: protected void ExecuteRPC(in RemoteCall rpc)
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCall
    content.vb: Protected Sub ExecuteRPC(rpc As RemoteCall)
  overload: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC*
  nameWithType.vb: InternalEntity.ExecuteRPC(RemoteCall)
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(LiteEntitySystem.RemoteCall)
  name.vb: ExecuteRPC(RemoteCall)
- uid: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  commentId: M:LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  id: ExecuteRPC``1(LiteEntitySystem.RemoteCall{``0}@,``0)
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ExecuteRPC<T>(in RemoteCall<T>, T)
  nameWithType: InternalEntity.ExecuteRPC<T>(in RemoteCall<T>, T)
  fullName: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC<T>(in LiteEntitySystem.RemoteCall<T>, T)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  syntax:
    content: 'protected void ExecuteRPC<T>(in RemoteCall<T> rpc, T value) where T : unmanaged'
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCall{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Protected Sub ExecuteRPC(Of T As Structure)(rpc As RemoteCall(Of T), value As T)
  overload: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC*
  nameWithType.vb: InternalEntity.ExecuteRPC(Of T)(RemoteCall(Of T), T)
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(Of T)(LiteEntitySystem.RemoteCall(Of T), T)
  name.vb: ExecuteRPC(Of T)(RemoteCall(Of T), T)
- uid: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  commentId: M:LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  id: ExecuteRPC``1(LiteEntitySystem.RemoteCallSpan{``0}@,System.ReadOnlySpan{``0})
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ExecuteRPC<T>(in RemoteCallSpan<T>, ReadOnlySpan<T>)
  nameWithType: InternalEntity.ExecuteRPC<T>(in RemoteCallSpan<T>, ReadOnlySpan<T>)
  fullName: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC<T>(in LiteEntitySystem.RemoteCallSpan<T>, System.ReadOnlySpan<T>)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  syntax:
    content: 'protected void ExecuteRPC<T>(in RemoteCallSpan<T> rpc, ReadOnlySpan<T> value) where T : unmanaged'
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCallSpan{{T}}
    - id: value
      type: System.ReadOnlySpan{{T}}
    typeParameters:
    - id: T
    content.vb: Protected Sub ExecuteRPC(Of T As Structure)(rpc As RemoteCallSpan(Of T), value As ReadOnlySpan(Of T))
  overload: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC*
  nameWithType.vb: InternalEntity.ExecuteRPC(Of T)(RemoteCallSpan(Of T), ReadOnlySpan(Of T))
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(Of T)(LiteEntitySystem.RemoteCallSpan(Of T), System.ReadOnlySpan(Of T))
  name.vb: ExecuteRPC(Of T)(RemoteCallSpan(Of T), ReadOnlySpan(Of T))
- uid: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  commentId: M:LiteEntitySystem.Internal.InternalEntity.ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  id: ExecuteRPC``1(LiteEntitySystem.RemoteCallSerializable{``0}@,``0)
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ExecuteRPC<T>(in RemoteCallSerializable<T>, T)
  nameWithType: InternalEntity.ExecuteRPC<T>(in RemoteCallSerializable<T>, T)
  fullName: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC<T>(in LiteEntitySystem.RemoteCallSerializable<T>, T)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  syntax:
    content: 'protected void ExecuteRPC<T>(in RemoteCallSerializable<T> rpc, T value) where T : struct, ISpanSerializable'
    parameters:
    - id: rpc
      type: LiteEntitySystem.RemoteCallSerializable{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Protected Sub ExecuteRPC(Of T As {Structure, ISpanSerializable})(rpc As RemoteCallSerializable(Of T), value As T)
  overload: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC*
  nameWithType.vb: InternalEntity.ExecuteRPC(Of T)(RemoteCallSerializable(Of T), T)
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC(Of T)(LiteEntitySystem.RemoteCallSerializable(Of T), T)
  name.vb: ExecuteRPC(Of T)(RemoteCallSerializable(Of T), T)
- uid: LiteEntitySystem.Internal.InternalEntity.#ctor(LiteEntitySystem.EntityParams)
  commentId: M:LiteEntitySystem.Internal.InternalEntity.#ctor(LiteEntitySystem.EntityParams)
  id: '#ctor(LiteEntitySystem.EntityParams)'
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: InternalEntity(EntityParams)
  nameWithType: InternalEntity.InternalEntity(EntityParams)
  fullName: LiteEntitySystem.Internal.InternalEntity.InternalEntity(LiteEntitySystem.EntityParams)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  syntax:
    content: protected InternalEntity(EntityParams entityParams)
    parameters:
    - id: entityParams
      type: LiteEntitySystem.EntityParams
    content.vb: Protected Sub New(entityParams As EntityParams)
  overload: LiteEntitySystem.Internal.InternalEntity.#ctor*
  nameWithType.vb: InternalEntity.New(EntityParams)
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.New(LiteEntitySystem.EntityParams)
  name.vb: New(EntityParams)
- uid: LiteEntitySystem.Internal.InternalEntity.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  commentId: M:LiteEntitySystem.Internal.InternalEntity.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  id: CompareTo(LiteEntitySystem.Internal.InternalEntity)
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: CompareTo(InternalEntity)
  nameWithType: InternalEntity.CompareTo(InternalEntity)
  fullName: LiteEntitySystem.Internal.InternalEntity.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  example: []
  syntax:
    content: public int CompareTo(InternalEntity other)
    parameters:
    - id: other
      type: LiteEntitySystem.Internal.InternalEntity
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:  
          Value  

          Meaning  

          Less than zero  

          This instance precedes <code class="paramref">other</code> in the sort order.  

          Zero  

          This instance occurs in the same position in the sort order as <code class="paramref">other</code>.  

          Greater than zero  

          This instance follows <code class="paramref">other</code> in the sort order.
    content.vb: Public Function CompareTo(other As InternalEntity) As Integer
  overload: LiteEntitySystem.Internal.InternalEntity.CompareTo*
  implements:
  - System.IComparable{LiteEntitySystem.Internal.InternalEntity}.CompareTo(LiteEntitySystem.Internal.InternalEntity)
- uid: LiteEntitySystem.Internal.InternalEntity.GetHashCode
  commentId: M:LiteEntitySystem.Internal.InternalEntity.GetHashCode
  id: GetHashCode
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: InternalEntity.GetHashCode()
  fullName: LiteEntitySystem.Internal.InternalEntity.GetHashCode()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: LiteEntitySystem.Internal.InternalEntity.GetHashCode*
- uid: LiteEntitySystem.Internal.InternalEntity.ToString
  commentId: M:LiteEntitySystem.Internal.InternalEntity.ToString
  id: ToString
  parent: LiteEntitySystem.Internal.InternalEntity
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: InternalEntity.ToString()
  fullName: LiteEntitySystem.Internal.InternalEntity.ToString()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Internal
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiteEntitySystem.Internal.InternalEntity.ToString*
references:
- uid: LiteEntitySystem.Internal
  commentId: N:LiteEntitySystem.Internal
  href: LiteEntitySystem.html
  name: LiteEntitySystem.Internal
  nameWithType: LiteEntitySystem.Internal
  fullName: LiteEntitySystem.Internal
  spec.csharp:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Internal
    name: Internal
    href: LiteEntitySystem.Internal.html
  spec.vb:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Internal
    name: Internal
    href: LiteEntitySystem.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: LiteEntitySystem.Internal.InternalBaseClass
  commentId: T:LiteEntitySystem.Internal.InternalBaseClass
  parent: LiteEntitySystem.Internal
  href: LiteEntitySystem.Internal.InternalBaseClass.html
  name: InternalBaseClass
  nameWithType: InternalBaseClass
  fullName: LiteEntitySystem.Internal.InternalBaseClass
- uid: System.IComparable{LiteEntitySystem.Internal.InternalEntity}
  commentId: T:System.IComparable{LiteEntitySystem.Internal.InternalEntity}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<InternalEntity>
  nameWithType: IComparable<InternalEntity>
  fullName: System.IComparable<LiteEntitySystem.Internal.InternalEntity>
  nameWithType.vb: IComparable(Of InternalEntity)
  fullName.vb: System.IComparable(Of LiteEntitySystem.Internal.InternalEntity)
  name.vb: IComparable(Of InternalEntity)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: LiteEntitySystem.Internal.InternalEntity
    name: InternalEntity
    href: LiteEntitySystem.Internal.InternalEntity.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LiteEntitySystem.Internal.InternalEntity
    name: InternalEntity
    href: LiteEntitySystem.Internal.InternalEntity.html
  - name: )
- uid: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
  commentId: M:LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
  parent: LiteEntitySystem.Internal.InternalBaseClass
  href: LiteEntitySystem.Internal.InternalBaseClass.html#LiteEntitySystem_Internal_InternalBaseClass_OnSyncRequested
  name: OnSyncRequested()
  nameWithType: InternalBaseClass.OnSyncRequested()
  fullName: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested()
  spec.csharp:
  - uid: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
    name: OnSyncRequested
    href: LiteEntitySystem.Internal.InternalBaseClass.html#LiteEntitySystem_Internal_InternalBaseClass_OnSyncRequested
  - name: (
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Internal.InternalBaseClass.OnSyncRequested
    name: OnSyncRequested
    href: LiteEntitySystem.Internal.InternalBaseClass.html#LiteEntitySystem_Internal_InternalBaseClass_OnSyncRequested
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: LiteEntitySystem.EntityManager
  commentId: T:LiteEntitySystem.EntityManager
  parent: LiteEntitySystem
  href: LiteEntitySystem.EntityManager.html
  name: EntityManager
  nameWithType: EntityManager
  fullName: LiteEntitySystem.EntityManager
- uid: LiteEntitySystem
  commentId: N:LiteEntitySystem
  href: LiteEntitySystem.html
  name: LiteEntitySystem
  nameWithType: LiteEntitySystem
  fullName: LiteEntitySystem
- uid: LiteEntitySystem.Internal.InternalEntity.IsServer*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsServer
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsServer
  name: IsServer
  nameWithType: InternalEntity.IsServer
  fullName: LiteEntitySystem.Internal.InternalEntity.IsServer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LiteEntitySystem.Internal.InternalEntity.IsClient*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsClient
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsClient
  name: IsClient
  nameWithType: InternalEntity.IsClient
  fullName: LiteEntitySystem.Internal.InternalEntity.IsClient
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: LiteEntitySystem.Internal.InternalEntity.IsDestroyed*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsDestroyed
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsDestroyed
  name: IsDestroyed
  nameWithType: InternalEntity.IsDestroyed
  fullName: LiteEntitySystem.Internal.InternalEntity.IsDestroyed
- uid: LiteEntitySystem.Internal.InternalEntity.IsLocalControlled*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsLocalControlled
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsLocalControlled
  name: IsLocalControlled
  nameWithType: InternalEntity.IsLocalControlled
  fullName: LiteEntitySystem.Internal.InternalEntity.IsLocalControlled
- uid: LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsRemoteControlled
  name: IsRemoteControlled
  nameWithType: InternalEntity.IsRemoteControlled
  fullName: LiteEntitySystem.Internal.InternalEntity.IsRemoteControlled
- uid: LiteEntitySystem.Internal.InternalEntity.IsServerControlled*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsServerControlled
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsServerControlled
  name: IsServerControlled
  nameWithType: InternalEntity.IsServerControlled
  fullName: LiteEntitySystem.Internal.InternalEntity.IsServerControlled
- uid: LiteEntitySystem.Internal.InternalEntity.ClientManager*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.ClientManager
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_ClientManager
  name: ClientManager
  nameWithType: InternalEntity.ClientManager
  fullName: LiteEntitySystem.Internal.InternalEntity.ClientManager
- uid: LiteEntitySystem.ClientEntityManager
  commentId: T:LiteEntitySystem.ClientEntityManager
  parent: LiteEntitySystem
  href: LiteEntitySystem.ClientEntityManager.html
  name: ClientEntityManager
  nameWithType: ClientEntityManager
  fullName: LiteEntitySystem.ClientEntityManager
- uid: LiteEntitySystem.Internal.InternalEntity.ServerManager*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.ServerManager
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_ServerManager
  name: ServerManager
  nameWithType: InternalEntity.ServerManager
  fullName: LiteEntitySystem.Internal.InternalEntity.ServerManager
- uid: LiteEntitySystem.ServerEntityManager
  commentId: T:LiteEntitySystem.ServerEntityManager
  parent: LiteEntitySystem
  href: LiteEntitySystem.ServerEntityManager.html
  name: ServerEntityManager
  nameWithType: ServerEntityManager
  fullName: LiteEntitySystem.ServerEntityManager
- uid: LiteEntitySystem.Internal.InternalEntity.OwnerId*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.OwnerId
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_OwnerId
  name: OwnerId
  nameWithType: InternalEntity.OwnerId
  fullName: LiteEntitySystem.Internal.InternalEntity.OwnerId
- uid: LiteEntitySystem.Internal.InternalEntity.IsLocal*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsLocal
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsLocal
  name: IsLocal
  nameWithType: InternalEntity.IsLocal
  fullName: LiteEntitySystem.Internal.InternalEntity.IsLocal
- uid: LiteEntitySystem.Internal.InternalEntity.IsSingleton*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsSingleton
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsSingleton
  name: IsSingleton
  nameWithType: InternalEntity.IsSingleton
  fullName: LiteEntitySystem.Internal.InternalEntity.IsSingleton
- uid: LiteEntitySystem.Internal.InternalEntity.IsConstructed*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsConstructed
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsConstructed
  name: IsConstructed
  nameWithType: InternalEntity.IsConstructed
  fullName: LiteEntitySystem.Internal.InternalEntity.IsConstructed
- uid: LiteEntitySystem.Internal.InternalEntity.IsRemoved*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.IsRemoved
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_IsRemoved
  name: IsRemoved
  nameWithType: InternalEntity.IsRemoved
  fullName: LiteEntitySystem.Internal.InternalEntity.IsRemoved
- uid: LiteEntitySystem.Internal.InternalEntity.State*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.State
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_State
  name: State
  nameWithType: InternalEntity.State
  fullName: LiteEntitySystem.Internal.InternalEntity.State
- uid: LiteEntitySystem.Internal.EntityState
  commentId: T:LiteEntitySystem.Internal.EntityState
  parent: LiteEntitySystem.Internal
  href: LiteEntitySystem.Internal.EntityState.html
  name: EntityState
  nameWithType: EntityState
  fullName: LiteEntitySystem.Internal.EntityState
- uid: LiteEntitySystem.Internal.InternalEntity.Destroy*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.Destroy
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_Destroy
  name: Destroy
  nameWithType: InternalEntity.Destroy
  fullName: LiteEntitySystem.Internal.InternalEntity.Destroy
- uid: LiteEntitySystem.Internal.InternalEntity.OnDestroy*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.OnDestroy
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_OnDestroy
  name: OnDestroy
  nameWithType: InternalEntity.OnDestroy
  fullName: LiteEntitySystem.Internal.InternalEntity.OnDestroy
- uid: LiteEntitySystem.EntityFlagsAttribute
  commentId: T:LiteEntitySystem.EntityFlagsAttribute
  parent: LiteEntitySystem
  href: LiteEntitySystem.EntityFlagsAttribute.html
  name: EntityFlagsAttribute
  nameWithType: EntityFlagsAttribute
  fullName: LiteEntitySystem.EntityFlagsAttribute
- uid: LiteEntitySystem.Internal.InternalEntity.Update*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.Update
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_Update
  name: Update
  nameWithType: InternalEntity.Update
  fullName: LiteEntitySystem.Internal.InternalEntity.Update
- uid: LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_OnBeforeRollback
  name: OnBeforeRollback
  nameWithType: InternalEntity.OnBeforeRollback
  fullName: LiteEntitySystem.Internal.InternalEntity.OnBeforeRollback
- uid: LiteEntitySystem.Internal.InternalEntity.OnRollback*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.OnRollback
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_OnRollback
  name: OnRollback
  nameWithType: InternalEntity.OnRollback
  fullName: LiteEntitySystem.Internal.InternalEntity.OnRollback
- uid: LiteEntitySystem.ClientEntityManager.Update
  commentId: M:LiteEntitySystem.ClientEntityManager.Update
  href: LiteEntitySystem.ClientEntityManager.html#LiteEntitySystem_ClientEntityManager_Update
  name: Update()
  nameWithType: ClientEntityManager.Update()
  fullName: LiteEntitySystem.ClientEntityManager.Update()
  spec.csharp:
  - uid: LiteEntitySystem.ClientEntityManager.Update
    name: Update
    href: LiteEntitySystem.ClientEntityManager.html#LiteEntitySystem_ClientEntityManager_Update
  - name: (
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.ClientEntityManager.Update
    name: Update
    href: LiteEntitySystem.ClientEntityManager.html#LiteEntitySystem_ClientEntityManager_Update
  - name: (
  - name: )
- uid: LiteEntitySystem.Internal.InternalEntity.VisualUpdate*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.VisualUpdate
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_VisualUpdate
  name: VisualUpdate
  nameWithType: InternalEntity.VisualUpdate
  fullName: LiteEntitySystem.Internal.InternalEntity.VisualUpdate
- uid: LiteEntitySystem.Internal.InternalEntity.OnConstructed*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.OnConstructed
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_OnConstructed
  name: OnConstructed
  nameWithType: InternalEntity.OnConstructed
  fullName: LiteEntitySystem.Internal.InternalEntity.OnConstructed
- uid: LiteEntitySystem.Internal.InternalEntity.OnLateConstructed*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.OnLateConstructed
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_OnLateConstructed
  name: OnLateConstructed
  nameWithType: InternalEntity.OnLateConstructed
  fullName: LiteEntitySystem.Internal.InternalEntity.OnLateConstructed
- uid: LiteEntitySystem.Internal.InternalEntity.RegisterRPC*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.RegisterRPC
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_RegisterRPC_LiteEntitySystem_RPCRegistrator__
  name: RegisterRPC
  nameWithType: InternalEntity.RegisterRPC
  fullName: LiteEntitySystem.Internal.InternalEntity.RegisterRPC
- uid: LiteEntitySystem.RPCRegistrator
  commentId: T:LiteEntitySystem.RPCRegistrator
  parent: LiteEntitySystem
  href: LiteEntitySystem.RPCRegistrator.html
  name: RPCRegistrator
  nameWithType: RPCRegistrator
  fullName: LiteEntitySystem.RPCRegistrator
- uid: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.ExecuteRPC
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_ExecuteRPC_LiteEntitySystem_RemoteCall__
  name: ExecuteRPC
  nameWithType: InternalEntity.ExecuteRPC
  fullName: LiteEntitySystem.Internal.InternalEntity.ExecuteRPC
- uid: LiteEntitySystem.RemoteCall
  commentId: T:LiteEntitySystem.RemoteCall
  parent: LiteEntitySystem
  href: LiteEntitySystem.RemoteCall.html
  name: RemoteCall
  nameWithType: RemoteCall
  fullName: LiteEntitySystem.RemoteCall
- uid: LiteEntitySystem.RemoteCall{{T}}
  commentId: T:LiteEntitySystem.RemoteCall{``1}
  parent: LiteEntitySystem
  definition: LiteEntitySystem.RemoteCall`1
  href: LiteEntitySystem.RemoteCall-1.html
  name: RemoteCall<T>
  nameWithType: RemoteCall<T>
  fullName: LiteEntitySystem.RemoteCall<T>
  nameWithType.vb: RemoteCall(Of T)
  fullName.vb: LiteEntitySystem.RemoteCall(Of T)
  name.vb: RemoteCall(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: LiteEntitySystem.RemoteCall`1
  commentId: T:LiteEntitySystem.RemoteCall`1
  href: LiteEntitySystem.RemoteCall-1.html
  name: RemoteCall<T>
  nameWithType: RemoteCall<T>
  fullName: LiteEntitySystem.RemoteCall<T>
  nameWithType.vb: RemoteCall(Of T)
  fullName.vb: LiteEntitySystem.RemoteCall(Of T)
  name.vb: RemoteCall(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCall`1
    name: RemoteCall
    href: LiteEntitySystem.RemoteCall-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: LiteEntitySystem.RemoteCallSpan{{T}}
  commentId: T:LiteEntitySystem.RemoteCallSpan{``1}
  parent: LiteEntitySystem
  definition: LiteEntitySystem.RemoteCallSpan`1
  href: LiteEntitySystem.RemoteCallSpan-1.html
  name: RemoteCallSpan<T>
  nameWithType: RemoteCallSpan<T>
  fullName: LiteEntitySystem.RemoteCallSpan<T>
  nameWithType.vb: RemoteCallSpan(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSpan(Of T)
  name.vb: RemoteCallSpan(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan{{T}}
  commentId: T:System.ReadOnlySpan{``0}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.RemoteCallSpan`1
  commentId: T:LiteEntitySystem.RemoteCallSpan`1
  href: LiteEntitySystem.RemoteCallSpan-1.html
  name: RemoteCallSpan<T>
  nameWithType: RemoteCallSpan<T>
  fullName: LiteEntitySystem.RemoteCallSpan<T>
  nameWithType.vb: RemoteCallSpan(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSpan(Of T)
  name.vb: RemoteCallSpan(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSpan`1
    name: RemoteCallSpan
    href: LiteEntitySystem.RemoteCallSpan-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.RemoteCallSerializable{{T}}
  commentId: T:LiteEntitySystem.RemoteCallSerializable{``1}
  parent: LiteEntitySystem
  definition: LiteEntitySystem.RemoteCallSerializable`1
  href: LiteEntitySystem.RemoteCallSerializable-1.html
  name: RemoteCallSerializable<T>
  nameWithType: RemoteCallSerializable<T>
  fullName: LiteEntitySystem.RemoteCallSerializable<T>
  nameWithType.vb: RemoteCallSerializable(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSerializable(Of T)
  name.vb: RemoteCallSerializable(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.RemoteCallSerializable`1
  commentId: T:LiteEntitySystem.RemoteCallSerializable`1
  href: LiteEntitySystem.RemoteCallSerializable-1.html
  name: RemoteCallSerializable<T>
  nameWithType: RemoteCallSerializable<T>
  fullName: LiteEntitySystem.RemoteCallSerializable<T>
  nameWithType.vb: RemoteCallSerializable(Of T)
  fullName.vb: LiteEntitySystem.RemoteCallSerializable(Of T)
  name.vb: RemoteCallSerializable(Of T)
  spec.csharp:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LiteEntitySystem.RemoteCallSerializable`1
    name: RemoteCallSerializable
    href: LiteEntitySystem.RemoteCallSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.Internal.InternalEntity.#ctor*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.#ctor
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity__ctor_LiteEntitySystem_EntityParams_
  name: InternalEntity
  nameWithType: InternalEntity.InternalEntity
  fullName: LiteEntitySystem.Internal.InternalEntity.InternalEntity
  nameWithType.vb: InternalEntity.New
  fullName.vb: LiteEntitySystem.Internal.InternalEntity.New
  name.vb: New
- uid: LiteEntitySystem.EntityParams
  commentId: T:LiteEntitySystem.EntityParams
  parent: LiteEntitySystem
  href: LiteEntitySystem.EntityParams.html
  name: EntityParams
  nameWithType: EntityParams
  fullName: LiteEntitySystem.EntityParams
- uid: LiteEntitySystem.Internal.InternalEntity.CompareTo*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.CompareTo
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_CompareTo_LiteEntitySystem_Internal_InternalEntity_
  name: CompareTo
  nameWithType: InternalEntity.CompareTo
  fullName: LiteEntitySystem.Internal.InternalEntity.CompareTo
- uid: System.IComparable{LiteEntitySystem.Internal.InternalEntity}.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  commentId: M:System.IComparable{LiteEntitySystem.Internal.InternalEntity}.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  parent: System.IComparable{LiteEntitySystem.Internal.InternalEntity}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(InternalEntity)
  nameWithType: IComparable<InternalEntity>.CompareTo(InternalEntity)
  fullName: System.IComparable<LiteEntitySystem.Internal.InternalEntity>.CompareTo(LiteEntitySystem.Internal.InternalEntity)
  nameWithType.vb: IComparable(Of InternalEntity).CompareTo(InternalEntity)
  fullName.vb: System.IComparable(Of LiteEntitySystem.Internal.InternalEntity).CompareTo(LiteEntitySystem.Internal.InternalEntity)
  spec.csharp:
  - uid: System.IComparable{LiteEntitySystem.Internal.InternalEntity}.CompareTo(LiteEntitySystem.Internal.InternalEntity)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: LiteEntitySystem.Internal.InternalEntity
    name: InternalEntity
    href: LiteEntitySystem.Internal.InternalEntity.html
  - name: )
  spec.vb:
  - uid: System.IComparable{LiteEntitySystem.Internal.InternalEntity}.CompareTo(LiteEntitySystem.Internal.InternalEntity)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: LiteEntitySystem.Internal.InternalEntity
    name: InternalEntity
    href: LiteEntitySystem.Internal.InternalEntity.html
  - name: )
- uid: LiteEntitySystem.Internal.InternalEntity
  commentId: T:LiteEntitySystem.Internal.InternalEntity
  parent: LiteEntitySystem.Internal
  href: LiteEntitySystem.Internal.InternalEntity.html
  name: InternalEntity
  nameWithType: InternalEntity
  fullName: LiteEntitySystem.Internal.InternalEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: LiteEntitySystem.Internal.InternalEntity.GetHashCode*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.GetHashCode
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_GetHashCode
  name: GetHashCode
  nameWithType: InternalEntity.GetHashCode
  fullName: LiteEntitySystem.Internal.InternalEntity.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: LiteEntitySystem.Internal.InternalEntity.ToString*
  commentId: Overload:LiteEntitySystem.Internal.InternalEntity.ToString
  href: LiteEntitySystem.Internal.InternalEntity.html#LiteEntitySystem_Internal_InternalEntity_ToString
  name: ToString
  nameWithType: InternalEntity.ToString
  fullName: LiteEntitySystem.Internal.InternalEntity.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
