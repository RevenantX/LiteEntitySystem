### YamlMime:ManagedReference
items:
- uid: LiteEntitySystem.Collections.BitReadOnlySpan
  commentId: T:LiteEntitySystem.Collections.BitReadOnlySpan
  id: BitReadOnlySpan
  parent: LiteEntitySystem.Collections
  children:
  - LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Byte*,System.Int32)
  - LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Byte[],System.Int32,System.Int32)
  - LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.ReadOnlySpan{System.Byte},System.Int32)
  - LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Span{System.Byte})
  - LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Span{System.Byte},System.Int32)
  - LiteEntitySystem.Collections.BitReadOnlySpan.BitCount
  - LiteEntitySystem.Collections.BitReadOnlySpan.ByteCount
  - LiteEntitySystem.Collections.BitReadOnlySpan.Item(System.Int32)
  - LiteEntitySystem.Collections.BitReadOnlySpan.ToString
  langs:
  - csharp
  - vb
  name: BitReadOnlySpan
  nameWithType: BitReadOnlySpan
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan
  type: Struct
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public readonly ref struct BitReadOnlySpan
    content.vb: Public Structure BitReadOnlySpan
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.BitCount
  commentId: F:LiteEntitySystem.Collections.BitReadOnlySpan.BitCount
  id: BitCount
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: BitCount
  nameWithType: BitReadOnlySpan.BitCount
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitCount
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public readonly int BitCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly BitCount As Integer
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.ByteCount
  commentId: F:LiteEntitySystem.Collections.BitReadOnlySpan.ByteCount
  id: ByteCount
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: ByteCount
  nameWithType: BitReadOnlySpan.ByteCount
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.ByteCount
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public readonly int ByteCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly ByteCount As Integer
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Span{System.Byte})
  commentId: M:LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Span{System.Byte})
  id: '#ctor(System.Span{System.Byte})'
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: BitReadOnlySpan(Span<byte>)
  nameWithType: BitReadOnlySpan.BitReadOnlySpan(Span<byte>)
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitReadOnlySpan(System.Span<byte>)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public BitReadOnlySpan(Span<byte> bitRegion)
    parameters:
    - id: bitRegion
      type: System.Span{System.Byte}
    content.vb: Public Sub New(bitRegion As Span(Of Byte))
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor*
  nameWithType.vb: BitReadOnlySpan.New(Span(Of Byte))
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.New(System.Span(Of Byte))
  name.vb: New(Span(Of Byte))
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Span{System.Byte},System.Int32)
  commentId: M:LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Span{System.Byte},System.Int32)
  id: '#ctor(System.Span{System.Byte},System.Int32)'
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: BitReadOnlySpan(Span<byte>, int)
  nameWithType: BitReadOnlySpan.BitReadOnlySpan(Span<byte>, int)
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitReadOnlySpan(System.Span<byte>, int)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public BitReadOnlySpan(Span<byte> bitRegion, int bitCount)
    parameters:
    - id: bitRegion
      type: System.Span{System.Byte}
    - id: bitCount
      type: System.Int32
    content.vb: Public Sub New(bitRegion As Span(Of Byte), bitCount As Integer)
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor*
  nameWithType.vb: BitReadOnlySpan.New(Span(Of Byte), Integer)
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.New(System.Span(Of Byte), Integer)
  name.vb: New(Span(Of Byte), Integer)
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.ReadOnlySpan{System.Byte},System.Int32)
  commentId: M:LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.ReadOnlySpan{System.Byte},System.Int32)
  id: '#ctor(System.ReadOnlySpan{System.Byte},System.Int32)'
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: BitReadOnlySpan(ReadOnlySpan<byte>, int)
  nameWithType: BitReadOnlySpan.BitReadOnlySpan(ReadOnlySpan<byte>, int)
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitReadOnlySpan(System.ReadOnlySpan<byte>, int)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public BitReadOnlySpan(ReadOnlySpan<byte> bitRegion, int bitCount)
    parameters:
    - id: bitRegion
      type: System.ReadOnlySpan{System.Byte}
    - id: bitCount
      type: System.Int32
    content.vb: Public Sub New(bitRegion As ReadOnlySpan(Of Byte), bitCount As Integer)
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor*
  nameWithType.vb: BitReadOnlySpan.New(ReadOnlySpan(Of Byte), Integer)
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.New(System.ReadOnlySpan(Of Byte), Integer)
  name.vb: New(ReadOnlySpan(Of Byte), Integer)
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Byte*,System.Int32)
  commentId: M:LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Byte*,System.Int32)
  id: '#ctor(System.Byte*,System.Int32)'
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: BitReadOnlySpan(byte*, int)
  nameWithType: BitReadOnlySpan.BitReadOnlySpan(byte*, int)
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitReadOnlySpan(byte*, int)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public BitReadOnlySpan(byte* bitRegion, int bitCount)
    parameters:
    - id: bitRegion
      type: System.Byte*
    - id: bitCount
      type: System.Int32
    content.vb: Public Sub New(bitRegion As Byte*, bitCount As Integer)
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor*
  nameWithType.vb: BitReadOnlySpan.New(Byte*, Integer)
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.New(Byte*, Integer)
  name.vb: New(Byte*, Integer)
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:LiteEntitySystem.Collections.BitReadOnlySpan.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: BitReadOnlySpan(byte[], int, int)
  nameWithType: BitReadOnlySpan.BitReadOnlySpan(byte[], int, int)
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitReadOnlySpan(byte[], int, int)
  type: Constructor
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public BitReadOnlySpan(byte[] bitRegion, int offset, int bitCount)
    parameters:
    - id: bitRegion
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: bitCount
      type: System.Int32
    content.vb: Public Sub New(bitRegion As Byte(), offset As Integer, bitCount As Integer)
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor*
  nameWithType.vb: BitReadOnlySpan.New(Byte(), Integer, Integer)
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.New(Byte(), Integer, Integer)
  name.vb: New(Byte(), Integer, Integer)
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.Item(System.Int32)
  commentId: P:LiteEntitySystem.Collections.BitReadOnlySpan.Item(System.Int32)
  id: Item(System.Int32)
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: BitReadOnlySpan.this[int]
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.this[int]
  type: Property
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  syntax:
    content: public bool this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Default Property this[](index As Integer) As Boolean
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.Item*
  nameWithType.vb: BitReadOnlySpan.this[](Integer)
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.this[](Integer)
  name.vb: this[](Integer)
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.ToString
  commentId: M:LiteEntitySystem.Collections.BitReadOnlySpan.ToString
  id: ToString
  parent: LiteEntitySystem.Collections.BitReadOnlySpan
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BitReadOnlySpan.ToString()
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.ToString()
  type: Method
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem.Collections
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: LiteEntitySystem.Collections.BitReadOnlySpan.ToString*
references:
- uid: LiteEntitySystem.Collections
  commentId: N:LiteEntitySystem.Collections
  href: LiteEntitySystem.html
  name: LiteEntitySystem.Collections
  nameWithType: LiteEntitySystem.Collections
  fullName: LiteEntitySystem.Collections
  spec.csharp:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Collections
    name: Collections
    href: LiteEntitySystem.Collections.html
  spec.vb:
  - uid: LiteEntitySystem
    name: LiteEntitySystem
    href: LiteEntitySystem.html
  - name: .
  - uid: LiteEntitySystem.Collections
    name: Collections
    href: LiteEntitySystem.Collections.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.#ctor*
  commentId: Overload:LiteEntitySystem.Collections.BitReadOnlySpan.#ctor
  href: LiteEntitySystem.Collections.BitReadOnlySpan.html#LiteEntitySystem_Collections_BitReadOnlySpan__ctor_System_Span_System_Byte__
  name: BitReadOnlySpan
  nameWithType: BitReadOnlySpan.BitReadOnlySpan
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.BitReadOnlySpan
  nameWithType.vb: BitReadOnlySpan.New
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.New
  name.vb: New
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.Item*
  commentId: Overload:LiteEntitySystem.Collections.BitReadOnlySpan.Item
  href: LiteEntitySystem.Collections.BitReadOnlySpan.html#LiteEntitySystem_Collections_BitReadOnlySpan_Item_System_Int32_
  name: this
  nameWithType: BitReadOnlySpan.this
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.this
  nameWithType.vb: BitReadOnlySpan.this[]
  fullName.vb: LiteEntitySystem.Collections.BitReadOnlySpan.this[]
  name.vb: this[]
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: LiteEntitySystem.Collections.BitReadOnlySpan.ToString*
  commentId: Overload:LiteEntitySystem.Collections.BitReadOnlySpan.ToString
  href: LiteEntitySystem.Collections.BitReadOnlySpan.html#LiteEntitySystem_Collections_BitReadOnlySpan_ToString
  name: ToString
  nameWithType: BitReadOnlySpan.ToString
  fullName: LiteEntitySystem.Collections.BitReadOnlySpan.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
